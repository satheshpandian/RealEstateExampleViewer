<Window x:Class="RealEstateExampleViewer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RealEstateExampleViewer"
        mc:Ignorable="d"
        Title="Real Estate Example Viewer" Height="450" Width="800" Loaded="Window_Loaded">
    <Window.Resources>
        <LinearGradientBrush x:Key="HeaderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Color="#FF6B8E95" Offset="0"/>
            <GradientStop Color="#FF14A7C1" Offset="1"/>
            <GradientStop Color="#FF1E424E" Offset="0.509"/>
            <GradientStop Color="#FF1D4855" Offset="0.542"/>
            <GradientStop Color="#FF1D4855" Offset="0.542"/>
            <GradientStop Color="#FF193A44" Offset="0.526"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="HeaderBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Color="#FF1D1D1D" Offset="0.614"/>
            <GradientStop Color="#FF007F96" Offset="0.853"/>
            <GradientStop Color="#FF0AEAFA" Offset="1"/>
        </LinearGradientBrush>
        <Style x:Key="HeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="{StaticResource HeaderBrush}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderBrush" Value="{StaticResource HeaderBorderBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="MinHeight" Value="30" />
            <Setter Property="Cursor" Value="Hand" />
        </Style>
        <Style x:Key="RowStyleWithAlternation" TargetType="DataGridRow">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Background" Value="GhostWhite"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="ContextMenu" Value="{x:Null}"/>
            <Style.Triggers>
                <Trigger Property="AlternationIndex" Value="1">
                    <Setter Property="Background" Value="#FFD0D0E0"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#F9F99F"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#F9F99F" />
                </Trigger>
                <Trigger Property="Validation.HasError" Value="True" >
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="Red" ShadowDepth="0" BlurRadius="20" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderThickness" Value="2" />
                    <Setter Property="BorderBrush" Value="Red" />
                    <Setter Property="Foreground" Value="Blue" />
                    <Setter Property="FontSize" Value="12" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CenterCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--<common:CompleteConverter x:Key="completeConverter" />-->
        <Style x:Key="GroupHeaderStyle" TargetType="{x:Type GroupItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">
                        <Expander x:Name="exp" IsExpanded="false"
                                  Background="White"
                                  Foreground="Black">
                            <Expander.Header>
                                <TextBlock Text="{Binding Name}"/>
                            </Expander.Header>
                            <ItemsPresenter />
                        </Expander>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>


        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150*"/>
            <ColumnDefinition Width="197*"/>
        </Grid.ColumnDefinitions>
        <Border Grid.Column ="0">
            <DataGrid x:Name="BuildingsGrid"  AutoGenerateColumns="False" HorizontalAlignment="Stretch" 
                      HorizontalContentAlignment="Stretch"
                      ColumnHeaderStyle="{StaticResource HeaderStyle}" RowStyle="{StaticResource RowStyleWithAlternation}" CellStyle="{StaticResource CenterCellStyle}"
                      ColumnWidth="*"
                      RowHeaderWidth="20" ColumnHeaderHeight="35" RowHeight="25" ItemsSource="{Binding}" SelectionChanged="BuildingsGrid_SelectionChanged" CanUserAddRows="false">
                <DataGrid.Columns >
                    <DataGridTextColumn Binding="{Binding Address}" Header="Address" 
                                        Foreground="Blue" FontWeight="Bold"
                                        CanUserReorder="False" />
                    <DataGridTextColumn Binding="{Binding City}" Header="City" 
                                        Foreground="Blue" FontWeight="Bold"
                                        CanUserReorder="False"/>
                    <DataGridTextColumn Binding="{Binding State}" Header="State" 
                                        Foreground="Blue" FontWeight="Bold"
                                        CanUserReorder="False"/>
                    <DataGridTextColumn Binding="{Binding ZipOrPostalCode}" Header="Zip PostalCode" 
                                        Foreground="Blue" FontWeight="Bold"
                                        CanUserReorder="False"/>
                    <DataGridTextColumn  Header="Occupancy" 
                                        Foreground="Blue" FontWeight="Bold"
                                        CanUserReorder="False" Binding="{Binding Occupancy}" />

                </DataGrid.Columns>
            </DataGrid>
        </Border>
        <Border Grid.Column ="1">
            <DataGrid x:Name="SuitesGrid" AutoGenerateColumns="False" HorizontalAlignment="Stretch" 
                      HorizontalContentAlignment="Stretch"
                      ColumnHeaderStyle="{StaticResource HeaderStyle}" RowStyle="{StaticResource RowStyleWithAlternation}" CellStyle="{StaticResource CenterCellStyle}"
                      ColumnWidth="*"
                      RowHeaderWidth="20" ColumnHeaderHeight="35" RowHeight="25" ItemsSource="{Binding}" CanUserAddRows="false">
                <DataGrid.GroupStyle>
                    <GroupStyle ContainerStyle="{StaticResource GroupHeaderStyle}">
                        <GroupStyle.Panel>
                            <ItemsPanelTemplate>
                                <DataGridRowsPresenter/>
                            </ItemsPanelTemplate>
                        </GroupStyle.Panel>
                    </GroupStyle>
                </DataGrid.GroupStyle>
                <DataGrid.Style>
                    <Style TargetType="DataGrid">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding HasItems, RelativeSource={RelativeSource Self}}" Value="false">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="DataGrid" >
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition  Width="*" />
                                                    <ColumnDefinition  Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition  Height="*" />
                                                </Grid.RowDefinitions>
                                                <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="0" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                <TextBlock Text="Vacant" Grid.Row="1"  Grid.Column="0" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Style>
                <DataGrid.Columns >
                    <DataGridTextColumn Binding="{Binding SuiteName}" Header="SuiteName" 
                                        CanUserReorder="False" />
                    <DataGridTextColumn Binding="{Binding SuiteArea}" Header="SuiteArea" 
                                        CanUserReorder="False" />
                </DataGrid.Columns>
                <DataGrid.RowDetailsTemplate>
                    <DataTemplate>
                        <DataGrid  AutoGenerateColumns="False" HorizontalAlignment="Stretch" 
                                      HorizontalContentAlignment="Stretch"  
                                      ColumnHeaderStyle="{StaticResource HeaderStyle}" RowStyle="{StaticResource RowStyleWithAlternation}" CellStyle="{StaticResource CenterCellStyle}"
                                      ColumnWidth="*" ItemsSource="{Binding Leases, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" CanUserAddRows="False">
                            <DataGrid.Columns >
                                <DataGridTextColumn Binding="{Binding LeaseID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="LeaseID" 
                                                    Foreground="Blue" FontWeight="Bold" Width="200" 
                                                    CanUserReorder="False" />
                                <DataGridTextColumn Binding="{Binding TenantName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="TenantName" 
                                                            Foreground="Blue" FontWeight="Bold" Width="200" 
                                                            CanUserReorder="False" />
                                <DataGridTextColumn Binding="{Binding LeaseBegin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="LeaseBegin" 
                                                            Foreground="Blue" FontWeight="Bold" Width="200"
                                                            CanUserReorder="False"/>
                                <DataGridTextColumn Binding="{Binding LeaseExpiration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="LeaseExpiration" 
                                                            Foreground="Blue" FontWeight="Bold" Width="150"
                                                            CanUserReorder="False"/>
                                <DataGridTextColumn Binding="{Binding RentPerMonth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="RentPerMonths" 
                                                            Foreground="Blue" FontWeight="Bold" Width="150"
                                                            CanUserReorder="False"/>

                            </DataGrid.Columns>

                        </DataGrid>
                    </DataTemplate>
                </DataGrid.RowDetailsTemplate>
            </DataGrid>
        </Border>

    </Grid>

</Window>
